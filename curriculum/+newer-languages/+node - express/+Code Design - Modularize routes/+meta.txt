# Express modularizing the routes
Tutorial: https://medium.com/@catherinelau/how-to-modularize-routes-with-the-express-router-5ce46f9bb2bd

The server.js connects `app` to other route modules:
```
const express = require('express');
const app = express();

const apiRoutes = require('./routes/apiRoutes');
const htmlRoutes = require('./routes/htmlRoutes');
const moreHtmlRoutes = require('./routes/htmlRoutes2');

app.use("api/", apiRoutes);
app.use("/", htmlRoutes);
app.use("/", moreHtmlRoutes);

// Listen to port code
app.listen(3001, () => {
    console.log(`App listening on PORT 3001`);
});
```


The routes/htmlRoutes.js uses router instance to route
```
const express = require('express');
const router = express.Router(); // notice we are not using Express app like in index.js. We are using Express router for the "Express modules".
const path = require('path');


router.get('/', (req, res) => {

  res.sendFile(path.join(__dirname, '../../public/index.html'));

});


router.get('/animals', (req, res) => {

  res.sendFile(path.join(__dirname, '../../public/animals.html'));

});


router.get('/zookeepers', (req, res) => {

  res.sendFile(path.join(__dirname, '../../public/zookeepers.html'));

});


module.exports = router;
```

