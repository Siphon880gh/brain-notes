dev
robo 3t connect to mongo

--

SQL dependencies etc
```
CREATE TABLE employee(
  id INTEGER(11) AUTO_INCREMENT NOT NULL,
  first_name varchar(30) NOT NULL,
  last_name varchar(30) NOT NULL,
  role_id int(11) NOT NULL,
  manager_id int(11) DEFAULT NULL,
    FOREIGN KEY (role_id) REFERENCES role(role_id) ON DELETE CASCADE,
    PRIMARY KEY (id)
);
```

--


// add new employee
insertEmployee = function(data) {
    return new Promise ((resolve, reject) => {
        const sql = `INSERT INTO employees (first_name, last_name, role_id, manager_id)
            VALUES (?, ?, ?, ?)`;
        const params = [data.first_name, data.last_name, data.role_id, data.manager_id];

        db.query(sql, params, (err, result) => {
            if (err) {
                reject(err);
                return;
            }
            resolve({
                ok: true,
                message: "\nEmployee added\n"
            });
        });
    }); 
}

--

Sequelize belongsToMany
will need a through junction table C that's either defined or it'll create it on the fly for you

https://sequelize.org/master/manual/assocs.html

--

Renaming columns in sequelize:
```
const result = await Table.findAll({
  attributes: ['id', ['foo', 'bar']] //id, foo AS bar
});
```

Another way: Renaming tables and their columns
```
const orchards = await db.Area.findAll({
    include: [
        {
            model: db.AreaCoordinate,
            as: 'coordinates'
        }, {
            model: db.Crop,
            as: 'cropId',
            attribute: ['id']
        }],
    attributes: ['id', 'name']
});
```
--

If joining with only one model, you don't need to feed an array into include:
```
        include: {
            model: Comment
        }
```
~~
Making moment js dates compatible with Sequelize DataTypes.DATE
Use this format from momentjs: 'YYYY-MM-DD hh:mm:ss'


~~

Sequelize

{ onDelete: 'cascade' }

~~

Sequelize timestamps

https://stackoverflow.com/questions/20386402/sequelize-unknown-column-createdat-in-field-list


~~


In Sequelize, how to remove _previousDataValues, _options, options, and all kinds of other junk that comes from findAll, findOne, etc
.then(rows=>{
rows = rows.map(row=> {
  return row.get({ plain: true }); // Or:
  //return row.toJSON();
});
);

OR? Along with attributes and where:
            raw: true, // <----------- Magic is here
            nest: true // <----------- Magic is here

~~


JawsDB is so heroku can have a mysql question. it goes to another MySQL server so it can support MySQL apps (like thru Sequelize ORM, for example)
JawsDB is installed at your app: Resources -> Addons -> JawsDB MySQL (Don't install the Maria one)
There's a JawsDB mysql server URL in Settings -> Config Var. You can use that URL to connect versus your own localhost MySQL instance (using if/else to determine which one is truthy and useable)

Add to Retype:
So when you view in phpMyAdmin or other MySQL database viewer software, you can click hypertext links and jump to other table's records. This has nothing to do with associations and include needed to do joins.
```
    post_id: {
        type: DataTypes.INTEGER,
        references: {
            model: 'post',
            key: 'id'
        }
    }
```